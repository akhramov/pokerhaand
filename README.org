* Poker Deck API og Frontend

Et  prosjekt bestående av et Rust-basert backend-API og en Svelte-basert frontend for å generere, bla gjennom og sammenligne pokerhender.

** Hva er dette

Prosjektet tilbyr:

- Et API for å lage en deterministisk kortstokk basert på UUID. Denne hånden er Flush Royal http://localhost:8080/deck/3b783e86-9390-495a-8cd0-e5a9a93032c0/hand/offset/0
- Mulighet for å hente ut hender (5 kort om gangen) ved hjelp av offset
- Sammenligning av pokerhender med vurdering av vinner
- Historikk over hvilke hender som har blitt hentet
- En enkel frontend i Svelte som bruker API-et

** Kom i gang

For å kjøre hele systemet:

#+BEGIN_SRC bash
docker-compose up
#+END_SRC

Åpne deretter nettleseren og gå til:

- Frontend: http://localhost:8080

** API-dokumentasjon

*** POST /api/v1/decks

Oppretter en ny kortstokk og returnerer en UUID.

#+BEGIN_SRC json
{
  "id": "uuid"
}
#+END_SRC

*** GET /api/v1/decks/{deck_id}?offset=n

Henter 5 kort fra kortstokken basert på en deterministisk rekkefølge og et gitt offset.

Query-parametre:

- offset: Må være mellom 0 og 45

#+BEGIN_SRC json
{
  "hand": {
    "ranking": "TwoPair",
    "cards": ["2k", "2s", "5k", "5r", "9h"]
  },
  "next_offset": 5
}
#+END_SRC

*** POST /api/v1/hands/compare

Tar inn en liste med hender og returnerer vinnerne.

#+BEGIN_SRC json
{
  "hands": [
    {
      "external_id": "a",
      "hand": ["ah", "kh", "qh", "jh", "th"]
    },
    {
      "external_id": "b",
      "hand": ["2k", "3k", "4k", "5k", "6k"]
    }
  ]
}
#+END_SRC

#+BEGIN_SRC json
{
  "winners": [
    {
      "external_id": "a",
      "hand": ["ah", "kh", "qh", "jh", "th"]
    }
  ]
}
#+END_SRC

*** GET /api/v1/history?offset=n

Returnerer tidligere hendelser (lagrede offset-visninger) fra databasen.

#+BEGIN_SRC json
{
  "items": [
    {
      "deck": "uuid",
      "offset": 0,
      "time": 1716123456789
    }
  ],
  "next_offset": 10
}
#+END_SRC

** Teknologi

- Rust (Axum, SQLx, SQLite)
- Svelte
- Docker Compose

** Katalogstruktur

- /frontend           :: Svelte frontend
- /src                :: Rust backend
- docker-compose.yml  :: Docker Compose setup

** Testing

For å kjøre tester:

#+BEGIN_SRC bash
cargo test
#+END_SRC
